steps:
  - task: PowerShell@2
    inputs:
      targetType: filePath
      failOnStderr: true
      filePath: $(System.DefaultWorkingDirectory)\versionnumber.ps1
      arguments: $(version) $(Build.BuildId)
    displayName: 'Setting build version'

  - task: PowerShell@2
    inputs:
      targetType: inline
      failOnStderr: true
      script: |
        Write-Host "PSModulePath = $($env:PSModulePath)"
        $local:TargetDir = (($env:PSModulePath -split ';') | Where-Object { Test-Path $_ })[0]
        if (-not $TargetDir)
        {
          throw "Unable to find a PSModulePath in your user profile (" + $env:UserProfile + "), PSModulePath: " + $env:PSModulePath
        }
        $local:TargetDir = (Resolve-Path $local:TargetDir)
        Write-Host "ModuleDir = $($local:TargetDir)"
        Write-Output "##vso[task.setvariable variable=ModuleDir;]$($local:TargetDir)"
    displayName: 'Find PowerShell module path'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: 'env | sort'
    displayName: 'Display environment variables'

  - task: PowerShell@2
    inputs:
      targetType: filePath
      filePath: $(System.DefaultWorkingDirectory)\install-forpipeline.ps1
      arguments: $(ModuleDir) $(VersionString) $$(isPrerelease)
    displayName: 'Building PowerShell module'

  - task: PowerShell@2
    inputs:
      targetType: inline
      failOnStderr: true
      script: |
        Import-Module -Name safeguard-discovery -Verbose
        Get-PSRepository
    displayName: 'Ensure that PowerShell module loads'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(ModuleDir)\safeguard-discovery'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    displayName: 'Archiving Powershell module'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'SafeguardDiscoveryModule'
    displayName: 'Publishing the artifacts'
